<?php
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Serialization\Json;
/**
 * Implements hook_form_alter().
 */
function general_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // This is an example of what is known as an alter hook. The $form paremater
  // in this case represents an already complete Form API array and our hook
  // implementation is being given the opportunity to make changes to the
  // existing data structure before it's used. Inovking and alter hooks is a
  // common pattern anytime lists or complex data structures are assembled.
  // hook_form_alter(), which allows you to manipulate any form, is one of the
  // most commonly implemented hooks.
  //
  // @see hook_form_alter()
  // @see hook_form_FORM_ID_alter()
  //
  // If this is the user login form, change the description text of the username
  // field.
  if ($form_id === 'user_login_form') {
    $form['name']['#description'] = t('This text has been altered by general_form_alter().');
  }
  if ($form_id === 'node_article_form') {
    $form['title']['widget'][0]['value']['#title'] = t('Artwork Title');
  }
}



function general_theme($existing, $type, $theme, $path) {
  return array(
    'articles' => array(
      'variables' => array('items'=>NULL,'pager' => NULL,'sorting' => NULL,'tabs_html' => NULL,'wrap_prefix'=>NULL,'wrap_suffix'=>NULL,'no_records_text'=>NULL),
    ),
   
  );
}
